//
//  MainSearchModels.swift
//  AppSearch
//
//  Created by 기민주 on 2021/03/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum MainSearch {
	// MARK: - Use cases
		struct Request {
			var searchText: String // 검색어
		}
		struct Response {
			var inquiry: InquiryModel?
		}
		struct ViewModel { // 일단 최근 검색 기록이라고 해보자
			var listCount: Int?
			var displayedResult: [InquiryCellValue] = []
			var testData: InquiryCellValue?
		}
}

// MARK: - Search 조회 Model

struct InquiryModel: Codable {
	let resultCount: Int?
	let list: [InquiryCellValue]

	private enum CodingKeys: String, CodingKey {
		case resultCount
		case list = "results"
	}

	init(from decoder: Decoder) throws {
		let container = try decoder.container(keyedBy: CodingKeys.self)
		self.resultCount = try container.decodeIfPresent(Int.self, forKey: .resultCount)
		self.list = try container.decodeIfPresent(Array.self, forKey: .list) ?? []
	}
}

struct InquiryCellValue: Codable {
	let artistName: String			// 아티스트 이름
	let collectionName: String		// 오른쪽 정보
	let trackViewUrl: String
	let artworkUrl60: String
	let releaseDate: String

	// Test 데이터
	var versionDetail: String = ""
	var openURL: String = ""
	var infoContent: [String: String] = ["": ""]
	var infoCollectionData: [InfoCollectionData] = []

	private enum CodingKeys: String, CodingKey {
		case artistName
		case collectionName
		case trackViewUrl
		case artworkUrl60
		case releaseDate
	}

	init(from decoder: Decoder) throws {
		let container = try decoder.container(keyedBy: CodingKeys.self)
		self.artistName = try container.decodeIfPresent(String.self, forKey: .artistName) ?? ""
		self.collectionName = try container.decodeIfPresent(String.self, forKey: .collectionName) ?? ""
		self.trackViewUrl = try container.decodeIfPresent(String.self, forKey: .trackViewUrl) ?? ""
		self.artworkUrl60 = try container.decodeIfPresent(String.self, forKey: .artworkUrl60) ?? ""
		self.releaseDate = try container.decodeIfPresent(String.self, forKey: .releaseDate) ?? ""
	}
}

// fake Data for Test
struct InfoCollectionData {
	var top: String = ""
	var middle: String = ""
	var bottom: String = ""
}
